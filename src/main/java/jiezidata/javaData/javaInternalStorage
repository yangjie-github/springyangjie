java内存分配主要包括以下几个部分：
    1. 寄存器： 我们在程序中中无法控制
    2. 栈： 存放基本类型的数据对象的引用，但对象本身不放在栈中，而是存放在队中
    3. 堆： 存放用new产生的数据
    4. 静态域： 存放在对象中使用static定义的静态成员
    5. 常量池： 存放常量
    6. 非RAM（随即存取存储器）存储： 磁盘等永久存储空间


============================================================
栈： 在函数中定义的一些基本类型的变量数据和对象的引用变量都在函数的栈内存中分配。当在一段代码块定义一个变量时，Java就在栈中为这个变量分配内存空间，
    当该变量退出该作用域后，Java会自动释放掉为该变量所分配的内存空间，该内存空间可以立即被另作他用
============================================================
堆： 堆内存用来存放由new创建的对象和数组。 在堆中分配的内存，由Java虚拟机的自动垃圾回收器来管理。
    实际上，栈中的变量指向堆内存中的变量，这就是Java中的指针！
=============================================================
常量池： 常量池指的是在编译期被确定，并被保存在已编译的.class文件中的一些数据。
        除了包含代码中所定义的各种基本类型（如int、long等等）和对象型（如String及数组）的常量值(final)还包含一些以文本形式出现的符号引用
        在程序执行的时候,常量池会储存在Method Area,而不是堆中。


===========================================================
堆与栈

　　Java的堆是一个运行时数据区,类的(对象从中分配空间。这些对象通过new、newarray、 anewarray和multianewarray等指令建立，它们不需要程序代码来显式的释放。
    堆是由垃圾回收来负责的，堆的优势是可以动态地分配内存大小，生存期也不必事先告诉编译器，因为它是在运行时动态分配内存的，Java的垃圾收集器会自动收走这些不再使用的数据。
    但缺点是，由于要在运行时动态 分配内存，存取速度较慢。

　　栈的优势是，存取速度比堆要快，仅次于寄存器，栈数据可以共享。但缺点是，存在栈中的数据大小与生存期必须是确定的，缺乏灵活性。
    栈中主要存放一些基本类型的变量数据（int, short, long, byte, float, double, boolean, char）和对象句柄(引用)。
